apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'nebula.info'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'

bintray {
    user = System.env.BINTRAY_USER
    key = System.env.BINTRAY_KEY
    publish = true
    pkg {
        repo = 'releases'
        name = 'gradle-yarn-run-plugin'
        userOrg = 'nickcharles'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/nickcharles/gradle-yarn-run-plugin'
        publications = ['nebula']

        githubRepo = 'nickcharles/gradle-yarn-run-plugin'
        githubReleaseNotesFile = 'README.md'
    }
}

bintrayUpload.onlyIf {
    System.env.BINTRAY_USER && System.env.BINTRAY_KEY && project.version ==~ /\d+\.\d+\.\d+/
}

bintrayUpload.dependsOn 'generatePomFileForNebulaPublication', 'build'


pluginBundle {
    website = 'https://github.com/nickcharles/gradle-yarn-run-plugin'
    vcsUrl = 'https://github.com/nickcharles/gradle-yarn-run-plugin'
    description = 'A Gradle Plugin to create lifecycle tasks that trigger yarn run commands.'
    tags = ['yarn']

    plugins {
        yarnRun {
            id = 'com.nickcharles.yarn-run'
            displayName = 'Yarn Run'
        }
    }
}

publishPlugins.onlyIf {
    project.version ==~ /\d+\.\d+\.\d+/
}

publishPlugins.dependsOn 'generatePomFileForNebulaPublication', 'build'
